{
  "version": 3,
  "sources": ["../../three/examples/jsm/controls/TransformControls2.js"],
  "sourcesContent": ["/**\n * @author arodic / https://github.com/arodic\n */\n\n( function () {\n\n\t'use strict';\n\n\tvar GizmoMaterial = function ( parameters ) {\n\n\t\tTHREE.MeshBasicMaterial.call( this );\n\n\t\tthis.depthTest = false;\n\t\tthis.depthWrite = false;\n\t\tthis.fog = false;\n\t\tthis.side = THREE.FrontSide;\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t\tthis.oldColor = this.color.clone();\n\t\tthis.oldOpacity = this.opacity;\n\n\t\tthis.highlight = function ( highlighted ) {\n\n\t\t\tif ( highlighted ) {\n\n\t\t\t\tthis.color.setRGB( 1, 1, 0 );\n\t\t\t\tthis.opacity = 1;\n\n\t\t\t} else {\n\n\t\t\t\tthis.color.copy( this.oldColor );\n\t\t\t\tthis.opacity = this.oldOpacity;\n\n\t\t\t}\n\n\t\t};\n\n\t};\n\n\tGizmoMaterial.prototype = Object.create( THREE.MeshBasicMaterial.prototype );\n\tGizmoMaterial.prototype.constructor = GizmoMaterial;\n\n\n\tvar GizmoLineMaterial = function ( parameters ) {\n\n\t\tTHREE.LineBasicMaterial.call( this );\n\n\t\tthis.depthTest = false;\n\t\tthis.depthWrite = false;\n\t\tthis.fog = false;\n\t\tthis.transparent = true;\n\t\tthis.linewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t\tthis.oldColor = this.color.clone();\n\t\tthis.oldOpacity = this.opacity;\n\n\t\tthis.highlight = function ( highlighted ) {\n\n\t\t\tif ( highlighted ) {\n\n\t\t\t\tthis.color.setRGB( 1, 1, 0 );\n\t\t\t\tthis.opacity = 1;\n\n\t\t\t} else {\n\n\t\t\t\tthis.color.copy( this.oldColor );\n\t\t\t\tthis.opacity = this.oldOpacity;\n\n\t\t\t}\n\n\t\t};\n\n\t};\n\n\tGizmoLineMaterial.prototype = Object.create( THREE.LineBasicMaterial.prototype );\n\tGizmoLineMaterial.prototype.constructor = GizmoLineMaterial;\n\n\n\tvar pickerMaterial = new GizmoMaterial( { visible: false, transparent: false } );\n\n\n\tTHREE.TransformGizmo = function () {\n\n\t\tthis.init = function () {\n\n\t\t\tTHREE.Object3D.call( this );\n\n\t\t\tthis.handles = new THREE.Object3D();\n\t\t\tthis.pickers = new THREE.Object3D();\n\t\t\tthis.planes = new THREE.Object3D();\n\n\t\t\tthis.add( this.handles );\n\t\t\tthis.add( this.pickers );\n\t\t\tthis.add( this.planes );\n\n\t\t\t//// PLANES\n\n\t\t\tvar planeGeometry = new THREE.PlaneBufferGeometry( 50, 50, 2, 2 );\n\t\t\tvar planeMaterial = new THREE.MeshBasicMaterial( { visible: false, side: THREE.DoubleSide } );\n\n\t\t\tvar planes = {\n\t\t\t\t\"XY\": new THREE.Mesh( planeGeometry, planeMaterial ),\n\t\t\t\t\"YZ\": new THREE.Mesh( planeGeometry, planeMaterial ),\n\t\t\t\t\"XZ\": new THREE.Mesh( planeGeometry, planeMaterial ),\n\t\t\t\t\"XYZE\": new THREE.Mesh( planeGeometry, planeMaterial )\n\t\t\t};\n\n\t\t\tthis.activePlane = planes[ \"XYZE\" ];\n\n\t\t\tplanes[ \"YZ\" ].rotation.set( 0, Math.PI / 2, 0 );\n\t\t\tplanes[ \"XZ\" ].rotation.set( - Math.PI / 2, 0, 0 );\n\n\t\t\tfor ( var i in planes ) {\n\n\t\t\t\tplanes[ i ].name = i;\n\t\t\t\tthis.planes.add( planes[ i ] );\n\t\t\t\tthis.planes[ i ] = planes[ i ];\n\n\t\t\t}\n\n\t\t\t//// HANDLES AND PICKERS\n\n\t\t\tvar setupGizmos = function ( gizmoMap, parent ) {\n\n\t\t\t\tfor ( var name in gizmoMap ) {\n\n\t\t\t\t\tfor ( i = gizmoMap[ name ].length; i --; ) {\n\n\t\t\t\t\t\tvar object = gizmoMap[ name ][ i ][ 0 ];\n\t\t\t\t\t\tvar position = gizmoMap[ name ][ i ][ 1 ];\n\t\t\t\t\t\tvar rotation = gizmoMap[ name ][ i ][ 2 ];\n\n\t\t\t\t\t\tobject.name = name;\n\n\t\t\t\t\t\tobject.renderOrder = Infinity; // avoid being hidden by other transparent objects\n\n\t\t\t\t\t\tif ( position ) object.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\n\t\t\t\t\t\tif ( rotation ) object.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\n\n\t\t\t\t\t\tparent.add( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tsetupGizmos( this.handleGizmos, this.handles );\n\t\t\tsetupGizmos( this.pickerGizmos, this.pickers );\n\n\t\t\t// reset Transformations\n\n\t\t\tthis.traverse( function ( child ) {\n\n\t\t\t\tif ( child instanceof THREE.Mesh ) {\n\n\t\t\t\t\tchild.updateMatrix();\n\n\t\t\t\t\tvar tempGeometry = child.geometry.clone();\n\t\t\t\t\ttempGeometry.applyMatrix( child.matrix );\n\t\t\t\t\tchild.geometry = tempGeometry;\n\n\t\t\t\t\tchild.position.set( 0, 0, 0 );\n\t\t\t\t\tchild.rotation.set( 0, 0, 0 );\n\t\t\t\t\tchild.scale.set( 1, 1, 1 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\tthis.highlight = function ( axis ) {\n\n\t\t\tthis.traverse( function ( child ) {\n\n\t\t\t\tif ( child.material && child.material.highlight ) {\n\n\t\t\t\t\tif ( child.name === axis ) {\n\n\t\t\t\t\t\tchild.material.highlight( true );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tchild.material.highlight( false );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t};\n\n\tTHREE.TransformGizmo.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.TransformGizmo.prototype.constructor = THREE.TransformGizmo;\n\n\tTHREE.TransformGizmo.prototype.update = function ( rotation, eye ) {\n\n\t\tvar vec1 = new THREE.Vector3( 0, 0, 0 );\n\t\tvar vec2 = new THREE.Vector3( 0, 1, 0 );\n\t\tvar lookAtMatrix = new THREE.Matrix4();\n\n\t\tthis.traverse( function ( child ) {\n\n\t\t\tif ( child.name.search( \"E\" ) !== - 1 ) {\n\n\t\t\t\tchild.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( eye, vec1, vec2 ) );\n\n\t\t\t} else if ( child.name.search( \"X\" ) !== - 1 || child.name.search( \"Y\" ) !== - 1 || child.name.search( \"Z\" ) !== - 1 ) {\n\n\t\t\t\tchild.quaternion.setFromEuler( rotation );\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\tTHREE.TransformGizmoTranslate = function () {\n\n\t\tTHREE.TransformGizmo.call( this );\n\n\t\tvar arrowGeometry = new THREE.ConeBufferGeometry( 0.02, 0.1, 6, 1, false );\n\t\tarrowGeometry.translate( 0, 0.5, 0 );\n\n\t\tvar lineXGeometry = new THREE.BufferGeometry();\n\t\tlineXGeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( [ 0, 0, 0, 0.5, 0, 0 ], 3 ) );\n\n\t\tvar lineYGeometry = new THREE.BufferGeometry();\n\t\tlineYGeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( [ 0, 0, 0, 0, 0.5, 0 ], 3 ) );\n\n\t\tvar lineZGeometry = new THREE.BufferGeometry();\n\t\tlineZGeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( [ 0, 0, 0, 0, 0, 0.5 ], 3 ) );\n\n\t\tthis.handleGizmos = {\n\n\t\t\tX: [\n\t\t\t\t[ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xff0000 } ) ), [ 0.05, 0, 0 ], [ 0, 0, - Math.PI / 2 ] ],\n\t\t\t\t[ new THREE.Line( lineXGeometry, new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\n\t\t\t],\n\n\t\t\tY: [\n\t\t\t\t[ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x00ff00 } ) ), [ 0, 0.05, 0 ] ],\n\t\t\t\t[\tnew THREE.Line( lineYGeometry, new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\n\t\t\t],\n\n\t\t\tZ: [\n\t\t\t\t[ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 0.05 ], [ Math.PI / 2, 0, 0 ] ],\n\t\t\t\t[ new THREE.Line( lineZGeometry, new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\n\t\t\t],\n\n\t\t\tXYZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.OctahedronGeometry( 0.1, 0 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ 0, 0, 0 ] ]\n\t\t\t],\n\n\t\t\tXY: [\n\t\t\t\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0xffff00, opacity: 0.25 } ) ), [ 0.15, 0.15, 0 ] ]\n\t\t\t],\n\n\t\t\tYZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0x00ffff, opacity: 0.25 } ) ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ] ]\n\t\t\t],\n\n\t\t\tXZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0xff00ff, opacity: 0.25 } ) ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ] ]\n\t\t\t]\n\n\t\t};\n\n\t\tthis.pickerGizmos = {\n\n\t\t\tX: [\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0.6, 0, 0 ], [ 0, 0, - Math.PI / 2 ] ]\n\t\t\t],\n\n\t\t\tY: [\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0, 0.6, 0 ] ]\n\t\t\t],\n\n\t\t\tZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0, 0, 0.6 ], [ Math.PI / 2, 0, 0 ] ]\n\t\t\t],\n\n\t\t\tXYZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.OctahedronGeometry( 0.2, 0 ), pickerMaterial ) ]\n\t\t\t],\n\n\t\t\tXY: [\n\t\t\t\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), pickerMaterial ), [ 0.2, 0.2, 0 ] ]\n\t\t\t],\n\n\t\t\tYZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), pickerMaterial ), [ 0, 0.2, 0.2 ], [ 0, Math.PI / 2, 0 ] ]\n\t\t\t],\n\n\t\t\tXZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), pickerMaterial ), [ 0.2, 0, 0.2 ], [ - Math.PI / 2, 0, 0 ] ]\n\t\t\t]\n\n\t\t};\n\n\t\tthis.setActivePlane = function ( axis, eye ) {\n\n\t\t\tvar tempMatrix = new THREE.Matrix4();\n\t\t\teye.applyMatrix4( tempMatrix.getInverse( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ) ) );\n\n\t\t\tif ( axis === \"X\" ) {\n\n\t\t\t\tthis.activePlane = this.planes[ \"XY\" ];\n\n\t\t\t\tif ( Math.abs( eye.y ) > Math.abs( eye.z ) ) this.activePlane = this.planes[ \"XZ\" ];\n\n\t\t\t}\n\n\t\t\tif ( axis === \"Y\" ) {\n\n\t\t\t\tthis.activePlane = this.planes[ \"XY\" ];\n\n\t\t\t\tif ( Math.abs( eye.x ) > Math.abs( eye.z ) ) this.activePlane = this.planes[ \"YZ\" ];\n\n\t\t\t}\n\n\t\t\tif ( axis === \"Z\" ) {\n\n\t\t\t\tthis.activePlane = this.planes[ \"XZ\" ];\n\n\t\t\t\tif ( Math.abs( eye.x ) > Math.abs( eye.y ) ) this.activePlane = this.planes[ \"YZ\" ];\n\n\t\t\t}\n\n\t\t\tif ( axis === \"XYZ\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n\t\t\tif ( axis === \"XY\" ) this.activePlane = this.planes[ \"XY\" ];\n\n\t\t\tif ( axis === \"YZ\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n\t\t\tif ( axis === \"XZ\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n\t\t};\n\n\t\tthis.init();\n\n\t};\n\n\tTHREE.TransformGizmoTranslate.prototype = Object.create( THREE.TransformGizmo.prototype );\n\tTHREE.TransformGizmoTranslate.prototype.constructor = THREE.TransformGizmoTranslate;\n\n\tTHREE.TransformGizmoRotate = function () {\n\n\t\tTHREE.TransformGizmo.call( this );\n\n\t\tvar CircleGeometry = function ( radius, facing, arc ) {\n\n\t\t\tvar geometry = new THREE.BufferGeometry();\n\t\t\tvar vertices = [];\n\t\t\tarc = arc ? arc : 1;\n\n\t\t\tfor ( var i = 0; i <= 64 * arc; ++ i ) {\n\n\t\t\t\tif ( facing === 'x' ) vertices.push( 0, Math.cos( i / 32 * Math.PI ) * radius, Math.sin( i / 32 * Math.PI ) * radius );\n\t\t\t\tif ( facing === 'y' ) vertices.push( Math.cos( i / 32 * Math.PI ) * radius, 0, Math.sin( i / 32 * Math.PI ) * radius );\n\t\t\t\tif ( facing === 'z' ) vertices.push( Math.sin( i / 32 * Math.PI ) * radius, Math.cos( i / 32 * Math.PI ) * radius, 0 );\n\n\t\t\t}\n\n\t\t\tgeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( vertices, 3 ) );\n\t\t\treturn geometry;\n\n\t\t};\n\n\t\tthis.handleGizmos = {\n\n\t\t\tX: [\n\t\t\t\t[ new THREE.Line( new CircleGeometry( 1, 'x', 0.5 ), new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\n\t\t\t],\n\n\t\t\tY: [\n\t\t\t\t[ new THREE.Line( new CircleGeometry( 1, 'y', 0.5 ), new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\n\t\t\t],\n\n\t\t\tZ: [\n\t\t\t\t[ new THREE.Line( new CircleGeometry( 1, 'z', 0.5 ), new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\n\t\t\t],\n\n\t\t\tE: [\n\t\t\t\t[ new THREE.Line( new CircleGeometry( 1.25, 'z', 1 ), new GizmoLineMaterial( { color: 0xcccc00 } ) ) ]\n\t\t\t],\n\n\t\t\tXYZE: [\n\t\t\t\t[ new THREE.Line( new CircleGeometry( 1, 'z', 1 ), new GizmoLineMaterial( { color: 0x787878 } ) ) ]\n\t\t\t]\n\n\t\t};\n\n\t\tthis.pickerGizmos = {\n\n\t\t\tX: [\n\t\t\t\t[ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 4, 12, Math.PI ), pickerMaterial ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ] ]\n\t\t\t],\n\n\t\t\tY: [\n\t\t\t\t[ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 4, 12, Math.PI ), pickerMaterial ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ] ]\n\t\t\t],\n\n\t\t\tZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 4, 12, Math.PI ), pickerMaterial ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ] ]\n\t\t\t],\n\n\t\t\tE: [\n\t\t\t\t[ new THREE.Mesh( new THREE.TorusBufferGeometry( 1.25, 0.12, 2, 24 ), pickerMaterial ) ]\n\t\t\t],\n\n\t\t\tXYZE: [\n\t\t\t\t[ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 2, 24 ), pickerMaterial ) ]\n\t\t\t]\n\n\t\t};\n\n\t\tthis.pickerGizmos.XYZE[ 0 ][ 0 ].visible = false; // disable XYZE picker gizmo\n\n\t\tthis.setActivePlane = function ( axis ) {\n\n\t\t\tif ( axis === \"E\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n\t\t\tif ( axis === \"X\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n\t\t\tif ( axis === \"Y\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n\t\t\tif ( axis === \"Z\" ) this.activePlane = this.planes[ \"XY\" ];\n\n\t\t};\n\n\t\tthis.update = function ( rotation, eye2 ) {\n\n\t\t\tTHREE.TransformGizmo.prototype.update.apply( this, arguments );\n\n\t\t\tvar tempMatrix = new THREE.Matrix4();\n\t\t\tvar worldRotation = new THREE.Euler( 0, 0, 1 );\n\t\t\tvar tempQuaternion = new THREE.Quaternion();\n\t\t\tvar unitX = new THREE.Vector3( 1, 0, 0 );\n\t\t\tvar unitY = new THREE.Vector3( 0, 1, 0 );\n\t\t\tvar unitZ = new THREE.Vector3( 0, 0, 1 );\n\t\t\tvar quaternionX = new THREE.Quaternion();\n\t\t\tvar quaternionY = new THREE.Quaternion();\n\t\t\tvar quaternionZ = new THREE.Quaternion();\n\t\t\tvar eye = eye2.clone();\n\n\t\t\tworldRotation.copy( this.planes[ \"XY\" ].rotation );\n\t\t\ttempQuaternion.setFromEuler( worldRotation );\n\n\t\t\ttempMatrix.makeRotationFromQuaternion( tempQuaternion ).getInverse( tempMatrix );\n\t\t\teye.applyMatrix4( tempMatrix );\n\n\t\t\tthis.traverse( function( child ) {\n\n\t\t\t\ttempQuaternion.setFromEuler( worldRotation );\n\n\t\t\t\tif ( child.name === \"X\" ) {\n\n\t\t\t\t\tquaternionX.setFromAxisAngle( unitX, Math.atan2( - eye.y, eye.z ) );\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n\t\t\t\t\tchild.quaternion.copy( tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( child.name === \"Y\" ) {\n\n\t\t\t\t\tquaternionY.setFromAxisAngle( unitY, Math.atan2( eye.x, eye.z ) );\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n\t\t\t\t\tchild.quaternion.copy( tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( child.name === \"Z\" ) {\n\n\t\t\t\t\tquaternionZ.setFromAxisAngle( unitZ, Math.atan2( eye.y, eye.x ) );\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n\t\t\t\t\tchild.quaternion.copy( tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\tthis.init();\n\n\t};\n\n\tTHREE.TransformGizmoRotate.prototype = Object.create( THREE.TransformGizmo.prototype );\n\tTHREE.TransformGizmoRotate.prototype.constructor = THREE.TransformGizmoRotate;\n\n\tTHREE.TransformGizmoScale = function () {\n\n\t\tTHREE.TransformGizmo.call( this );\n\n\t\tvar arrowGeometry = new THREE.BoxBufferGeometry( 0.125, 0.125, 0.125 );\n\t\tarrowGeometry.translate( 0, 0.5, 0 );\n\n\t\tvar lineXGeometry = new THREE.BufferGeometry();\n\t\tlineXGeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( [ 0, 0, 0,  1, 0, 0 ], 3 ) );\n\n\t\tvar lineYGeometry = new THREE.BufferGeometry();\n\t\tlineYGeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( [ 0, 0, 0,  0, 1, 0 ], 3 ) );\n\n\t\tvar lineZGeometry = new THREE.BufferGeometry();\n\t\tlineZGeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( [ 0, 0, 0,  0, 0, 1 ], 3 ) );\n\n\t\tthis.handleGizmos = {\n\n\t\t\tX: [\n\t\t\t\t[ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xff0000 } ) ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ] ],\n\t\t\t\t[ new THREE.Line( lineXGeometry, new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\n\t\t\t],\n\n\t\t\tY: [\n\t\t\t\t[ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x00ff00 } ) ), [ 0, 0.5, 0 ] ],\n\t\t\t\t[ new THREE.Line( lineYGeometry, new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\n\t\t\t],\n\n\t\t\tZ: [\n\t\t\t\t[ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ] ],\n\t\t\t\t[ new THREE.Line( lineZGeometry, new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\n\t\t\t],\n\n\t\t\tXYZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.BoxBufferGeometry( 0.125, 0.125, 0.125 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ) ]\n\t\t\t]\n\n\t\t};\n\n\t\tthis.pickerGizmos = {\n\n\t\t\tX: [\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0.6, 0, 0 ], [ 0, 0, - Math.PI / 2 ] ]\n\t\t\t],\n\n\t\t\tY: [\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0, 0.6, 0 ] ]\n\t\t\t],\n\n\t\t\tZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0, 0, 0.6 ], [ Math.PI / 2, 0, 0 ] ]\n\t\t\t],\n\n\t\t\tXYZ: [\n\t\t\t\t[ new THREE.Mesh( new THREE.BoxBufferGeometry( 0.4, 0.4, 0.4 ), pickerMaterial ) ]\n\t\t\t]\n\n\t\t};\n\n\t\tthis.setActivePlane = function ( axis, eye ) {\n\n\t\t\tvar tempMatrix = new THREE.Matrix4();\n\t\t\teye.applyMatrix4( tempMatrix.getInverse( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ) ) );\n\n\t\t\tif ( axis === \"X\" ) {\n\n\t\t\t\tthis.activePlane = this.planes[ \"XY\" ];\n\t\t\t\tif ( Math.abs( eye.y ) > Math.abs( eye.z ) ) this.activePlane = this.planes[ \"XZ\" ];\n\n\t\t\t}\n\n\t\t\tif ( axis === \"Y\" ) {\n\n\t\t\t\tthis.activePlane = this.planes[ \"XY\" ];\n\t\t\t\tif ( Math.abs( eye.x ) > Math.abs( eye.z ) ) this.activePlane = this.planes[ \"YZ\" ];\n\n\t\t\t}\n\n\t\t\tif ( axis === \"Z\" ) {\n\n\t\t\t\tthis.activePlane = this.planes[ \"XZ\" ];\n\t\t\t\tif ( Math.abs( eye.x ) > Math.abs( eye.y ) ) this.activePlane = this.planes[ \"YZ\" ];\n\n\t\t\t}\n\n\t\t\tif ( axis === \"XYZ\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n\t\t};\n\n\t\tthis.init();\n\n\t};\n\n\tTHREE.TransformGizmoScale.prototype = Object.create( THREE.TransformGizmo.prototype );\n\tTHREE.TransformGizmoScale.prototype.constructor = THREE.TransformGizmoScale;\n\n\tTHREE.TransformControls = function ( camera, domElement ) {\n\n\t\t// TODO: Make non-uniform scale and rotate play nice in hierarchies\n\t\t// TODO: ADD RXYZ contol\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tdomElement = ( domElement !== undefined ) ? domElement : document;\n\n\t\tthis.object = undefined;\n\t\tthis.visible = false;\n\t\tthis.translationSnap = null;\n\t\tthis.rotationSnap = null;\n\t\tthis.space = \"world\";\n\t\tthis.size = 1;\n\t\tthis.axis = null;\n\n\t\tvar scope = this;\n\n\t\tvar _mode = \"translate\";\n\t\tvar _dragging = false;\n\t\tvar _gizmo = {\n\n\t\t\t\"translate\": new THREE.TransformGizmoTranslate(),\n\t\t\t\"rotate\": new THREE.TransformGizmoRotate(),\n\t\t\t\"scale\": new THREE.TransformGizmoScale()\n\t\t};\n\n\t\tfor ( var type in _gizmo ) {\n\n\t\t\tvar gizmoObj = _gizmo[ type ];\n\n\t\t\tgizmoObj.visible = ( type === _mode );\n\t\t\tthis.add( gizmoObj );\n\n\t\t}\n\n\t\tvar changeEvent = { type: \"change\" };\n\t\tvar mouseDownEvent = { type: \"mouseDown\" };\n\t\tvar mouseUpEvent = { type: \"mouseUp\", mode: _mode };\n\t\tvar objectChangeEvent = { type: \"objectChange\" };\n\n\t\tvar ray = new THREE.Raycaster();\n\t\tvar pointerVector = new THREE.Vector2();\n\n\t\tvar point = new THREE.Vector3();\n\t\tvar offset = new THREE.Vector3();\n\n\t\tvar rotation = new THREE.Vector3();\n\t\tvar offsetRotation = new THREE.Vector3();\n\t\tvar scale = 1;\n\n\t\tvar lookAtMatrix = new THREE.Matrix4();\n\t\tvar eye = new THREE.Vector3();\n\n\t\tvar tempMatrix = new THREE.Matrix4();\n\t\tvar tempVector = new THREE.Vector3();\n\t\tvar tempQuaternion = new THREE.Quaternion();\n\t\tvar unitX = new THREE.Vector3( 1, 0, 0 );\n\t\tvar unitY = new THREE.Vector3( 0, 1, 0 );\n\t\tvar unitZ = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar quaternionXYZ = new THREE.Quaternion();\n\t\tvar quaternionX = new THREE.Quaternion();\n\t\tvar quaternionY = new THREE.Quaternion();\n\t\tvar quaternionZ = new THREE.Quaternion();\n\t\tvar quaternionE = new THREE.Quaternion();\n\n\t\tvar oldPosition = new THREE.Vector3();\n\t\tvar oldScale = new THREE.Vector3();\n\t\tvar oldRotationMatrix = new THREE.Matrix4();\n\n\t\tvar parentRotationMatrix = new THREE.Matrix4();\n\t\tvar parentScale = new THREE.Vector3();\n\n\t\tvar worldPosition = new THREE.Vector3();\n\t\tvar worldRotation = new THREE.Euler();\n\t\tvar worldRotationMatrix = new THREE.Matrix4();\n\t\tvar camPosition = new THREE.Vector3();\n\t\tvar camRotation = new THREE.Euler();\n\n\t\tdomElement.addEventListener( \"mousedown\", onPointerDown, false );\n\t\tdomElement.addEventListener( \"touchstart\", onPointerDown, false );\n\n\t\tdomElement.addEventListener( \"mousemove\", onPointerHover, false );\n\t\tdomElement.addEventListener( \"touchmove\", onPointerHover, false );\n\n\t\tdomElement.addEventListener( \"mousemove\", onPointerMove, false );\n\t\tdomElement.addEventListener( \"touchmove\", onPointerMove, false );\n\n\t\tdomElement.addEventListener( \"mouseup\", onPointerUp, false );\n\t\tdomElement.addEventListener( \"mouseout\", onPointerUp, false );\n\t\tdomElement.addEventListener( \"touchend\", onPointerUp, false );\n\t\tdomElement.addEventListener( \"touchcancel\", onPointerUp, false );\n\t\tdomElement.addEventListener( \"touchleave\", onPointerUp, false );\n\n\t\tthis.dispose = function () {\n\n\t\t\tdomElement.removeEventListener( \"mousedown\", onPointerDown );\n\t\t\tdomElement.removeEventListener( \"touchstart\", onPointerDown );\n\n\t\t\tdomElement.removeEventListener( \"mousemove\", onPointerHover );\n\t\t\tdomElement.removeEventListener( \"touchmove\", onPointerHover );\n\n\t\t\tdomElement.removeEventListener( \"mousemove\", onPointerMove );\n\t\t\tdomElement.removeEventListener( \"touchmove\", onPointerMove );\n\n\t\t\tdomElement.removeEventListener( \"mouseup\", onPointerUp );\n\t\t\tdomElement.removeEventListener( \"mouseout\", onPointerUp );\n\t\t\tdomElement.removeEventListener( \"touchend\", onPointerUp );\n\t\t\tdomElement.removeEventListener( \"touchcancel\", onPointerUp );\n\t\t\tdomElement.removeEventListener( \"touchleave\", onPointerUp );\n\n\t\t};\n\n\t\tthis.attach = function ( object ) {\n\n\t\t\tthis.object = object;\n\t\t\tthis.visible = true;\n\t\t\tthis.update();\n\n\t\t};\n\n\t\tthis.detach = function () {\n\n\t\t\tthis.object = undefined;\n\t\t\tthis.visible = false;\n\t\t\tthis.axis = null;\n\n\t\t};\n\n\t\tthis.getMode = function () {\n\n\t\t\treturn _mode;\n\n\t\t};\n\n\t\tthis.setMode = function ( mode ) {\n\n\t\t\t_mode = mode ? mode : _mode;\n\n\t\t\tif ( _mode === \"scale\" ) scope.space = \"local\";\n\n\t\t\tfor ( var type in _gizmo ) _gizmo[ type ].visible = ( type === _mode );\n\n\t\t\tthis.update();\n\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t};\n\n\t\tthis.setTranslationSnap = function ( translationSnap ) {\n\n\t\t\tscope.translationSnap = translationSnap;\n\n\t\t};\n\n\t\tthis.setRotationSnap = function ( rotationSnap ) {\n\n\t\t\tscope.rotationSnap = rotationSnap;\n\n\t\t};\n\n\t\tthis.setSize = function ( size ) {\n\n\t\t\tscope.size = size;\n\t\t\tthis.update();\n\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t};\n\n\t\tthis.setSpace = function ( space ) {\n\n\t\t\tscope.space = space;\n\t\t\tthis.update();\n\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t};\n\n\t\tthis.update = function () {\n\n\t\t\tif ( scope.object === undefined ) return;\n\n\t\t\tscope.object.updateMatrixWorld();\n\t\t\tworldPosition.setFromMatrixPosition( scope.object.matrixWorld );\n\t\t\tworldRotation.setFromRotationMatrix( tempMatrix.extractRotation( scope.object.matrixWorld ) );\n\n\t\t\tcamera.updateMatrixWorld();\n\t\t\tcamPosition.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tcamRotation.setFromRotationMatrix( tempMatrix.extractRotation( camera.matrixWorld ) );\n\n\t\t\tscale = worldPosition.distanceTo( camPosition ) / 6 * scope.size;\n\t\t\tthis.position.copy( worldPosition );\n\t\t\tthis.scale.set( scale, scale, scale );\n\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\teye.copy( camPosition ).sub( worldPosition ).normalize();\n\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\teye.copy( camPosition ).normalize();\n\n\t\t\t}\n\n\t\t\tif ( scope.space === \"local\" ) {\n\n\t\t\t\t_gizmo[ _mode ].update( worldRotation, eye );\n\n\t\t\t} else if ( scope.space === \"world\" ) {\n\n\t\t\t\t_gizmo[ _mode ].update( new THREE.Euler(), eye );\n\n\t\t\t}\n\n\t\t\t_gizmo[ _mode ].highlight( scope.axis );\n\n\t\t};\n\n\t\tfunction onPointerHover( event ) {\n\n\t\t\tif ( scope.object === undefined || _dragging === true || ( event.button !== undefined && event.button !== 0 ) ) return;\n\n\t\t\tvar pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\n\n\t\t\tvar intersect = intersectObjects( pointer, _gizmo[ _mode ].pickers.children );\n\n\t\t\tvar axis = null;\n\n\t\t\tif ( intersect ) {\n\n\t\t\t\taxis = intersect.object.name;\n\n\t\t\t\tevent.preventDefault();\n\n\t\t\t}\n\n\t\t\tif ( scope.axis !== axis ) {\n\n\t\t\t\tscope.axis = axis;\n\t\t\t\tscope.update();\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.object === undefined || _dragging === true || ( event.button !== undefined && event.button !== 0 ) ) return;\n\n\t\t\tvar pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\n\n\t\t\tif ( pointer.button === 0 || pointer.button === undefined ) {\n\n\t\t\t\tvar intersect = intersectObjects( pointer, _gizmo[ _mode ].pickers.children );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\n\t\t\t\t\tscope.axis = intersect.object.name;\n\n\t\t\t\t\tscope.dispatchEvent( mouseDownEvent );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\teye.copy( camPosition ).sub( worldPosition ).normalize();\n\n\t\t\t\t\t_gizmo[ _mode ].setActivePlane( scope.axis, eye );\n\n\t\t\t\t\tvar planeIntersect = intersectObjects( pointer, [ _gizmo[ _mode ].activePlane ] );\n\n\t\t\t\t\tif ( planeIntersect ) {\n\n\t\t\t\t\t\toldPosition.copy( scope.object.position );\n\t\t\t\t\t\toldScale.copy( scope.object.scale );\n\n\t\t\t\t\t\toldRotationMatrix.extractRotation( scope.object.matrix );\n\t\t\t\t\t\tworldRotationMatrix.extractRotation( scope.object.matrixWorld );\n\n\t\t\t\t\t\tparentRotationMatrix.extractRotation( scope.object.parent.matrixWorld );\n\t\t\t\t\t\tparentScale.setFromMatrixScale( tempMatrix.getInverse( scope.object.parent.matrixWorld ) );\n\n\t\t\t\t\t\toffset.copy( planeIntersect.point );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_dragging = true;\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.object === undefined || scope.axis === null || _dragging === false || ( event.button !== undefined && event.button !== 0 ) ) return;\n\n\t\t\tvar pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\n\n\t\t\tvar planeIntersect = intersectObjects( pointer, [ _gizmo[ _mode ].activePlane ] );\n\n\t\t\tif ( planeIntersect === false ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tpoint.copy( planeIntersect.point );\n\n\t\t\tif ( _mode === \"translate\" ) {\n\n\t\t\t\tpoint.sub( offset );\n\t\t\t\tpoint.multiply( parentScale );\n\n\t\t\t\tif ( scope.space === \"local\" ) {\n\n\t\t\t\t\tpoint.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n\t\t\t\t\tif ( scope.axis.search( \"X\" ) === - 1 ) point.x = 0;\n\t\t\t\t\tif ( scope.axis.search( \"Y\" ) === - 1 ) point.y = 0;\n\t\t\t\t\tif ( scope.axis.search( \"Z\" ) === - 1 ) point.z = 0;\n\n\t\t\t\t\tpoint.applyMatrix4( oldRotationMatrix );\n\n\t\t\t\t\tscope.object.position.copy( oldPosition );\n\t\t\t\t\tscope.object.position.add( point );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.space === \"world\" || scope.axis.search( \"XYZ\" ) !== - 1 ) {\n\n\t\t\t\t\tif ( scope.axis.search( \"X\" ) === - 1 ) point.x = 0;\n\t\t\t\t\tif ( scope.axis.search( \"Y\" ) === - 1 ) point.y = 0;\n\t\t\t\t\tif ( scope.axis.search( \"Z\" ) === - 1 ) point.z = 0;\n\n\t\t\t\t\tpoint.applyMatrix4( tempMatrix.getInverse( parentRotationMatrix ) );\n\n\t\t\t\t\tscope.object.position.copy( oldPosition );\n\t\t\t\t\tscope.object.position.add( point );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.translationSnap !== null ) {\n\n\t\t\t\t\tif ( scope.space === \"local\" ) {\n\n\t\t\t\t\t\tscope.object.position.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( scope.axis.search( \"X\" ) !== - 1 ) scope.object.position.x = Math.round( scope.object.position.x / scope.translationSnap ) * scope.translationSnap;\n\t\t\t\t\tif ( scope.axis.search( \"Y\" ) !== - 1 ) scope.object.position.y = Math.round( scope.object.position.y / scope.translationSnap ) * scope.translationSnap;\n\t\t\t\t\tif ( scope.axis.search( \"Z\" ) !== - 1 ) scope.object.position.z = Math.round( scope.object.position.z / scope.translationSnap ) * scope.translationSnap;\n\n\t\t\t\t\tif ( scope.space === \"local\" ) {\n\n\t\t\t\t\t\tscope.object.position.applyMatrix4( worldRotationMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( _mode === \"scale\" ) {\n\n\t\t\t\tpoint.sub( offset );\n\t\t\t\tpoint.multiply( parentScale );\n\n\t\t\t\tif ( scope.space === \"local\" ) {\n\n\t\t\t\t\tif ( scope.axis === \"XYZ\" ) {\n\n\t\t\t\t\t\tscale = 1 + ( ( point.y ) / Math.max( oldScale.x, oldScale.y, oldScale.z ) );\n\n\t\t\t\t\t\tscope.object.scale.x = oldScale.x * scale;\n\t\t\t\t\t\tscope.object.scale.y = oldScale.y * scale;\n\t\t\t\t\t\tscope.object.scale.z = oldScale.z * scale;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpoint.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n\t\t\t\t\t\tif ( scope.axis === \"X\" ) scope.object.scale.x = oldScale.x * ( 1 + point.x / oldScale.x );\n\t\t\t\t\t\tif ( scope.axis === \"Y\" ) scope.object.scale.y = oldScale.y * ( 1 + point.y / oldScale.y );\n\t\t\t\t\t\tif ( scope.axis === \"Z\" ) scope.object.scale.z = oldScale.z * ( 1 + point.z / oldScale.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( _mode === \"rotate\" ) {\n\n\t\t\t\tpoint.sub( worldPosition );\n\t\t\t\tpoint.multiply( parentScale );\n\t\t\t\ttempVector.copy( offset ).sub( worldPosition );\n\t\t\t\ttempVector.multiply( parentScale );\n\n\t\t\t\tif ( scope.axis === \"E\" ) {\n\n\t\t\t\t\tpoint.applyMatrix4( tempMatrix.getInverse( lookAtMatrix ) );\n\t\t\t\t\ttempVector.applyMatrix4( tempMatrix.getInverse( lookAtMatrix ) );\n\n\t\t\t\t\trotation.set( Math.atan2( point.z, point.y ), Math.atan2( point.x, point.z ), Math.atan2( point.y, point.x ) );\n\t\t\t\t\toffsetRotation.set( Math.atan2( tempVector.z, tempVector.y ), Math.atan2( tempVector.x, tempVector.z ), Math.atan2( tempVector.y, tempVector.x ) );\n\n\t\t\t\t\ttempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\n\n\t\t\t\t\tquaternionE.setFromAxisAngle( eye, rotation.z - offsetRotation.z );\n\t\t\t\t\tquaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionE );\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n\t\t\t\t\tscope.object.quaternion.copy( tempQuaternion );\n\n\t\t\t\t} else if ( scope.axis === \"XYZE\" ) {\n\n\t\t\t\t\tquaternionE.setFromEuler( point.clone().cross( tempVector ).normalize() ); // rotation axis\n\n\t\t\t\t\ttempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\n\t\t\t\t\tquaternionX.setFromAxisAngle( quaternionE, - point.clone().angleTo( tempVector ) );\n\t\t\t\t\tquaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n\t\t\t\t\tscope.object.quaternion.copy( tempQuaternion );\n\n\t\t\t\t} else if ( scope.space === \"local\" ) {\n\n\t\t\t\t\tpoint.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n\t\t\t\t\ttempVector.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n\t\t\t\t\trotation.set( Math.atan2( point.z, point.y ), Math.atan2( point.x, point.z ), Math.atan2( point.y, point.x ) );\n\t\t\t\t\toffsetRotation.set( Math.atan2( tempVector.z, tempVector.y ), Math.atan2( tempVector.x, tempVector.z ), Math.atan2( tempVector.y, tempVector.x ) );\n\n\t\t\t\t\tquaternionXYZ.setFromRotationMatrix( oldRotationMatrix );\n\n\t\t\t\t\tif ( scope.rotationSnap !== null ) {\n\n\t\t\t\t\t\tquaternionX.setFromAxisAngle( unitX, Math.round( ( rotation.x - offsetRotation.x ) / scope.rotationSnap ) * scope.rotationSnap );\n\t\t\t\t\t\tquaternionY.setFromAxisAngle( unitY, Math.round( ( rotation.y - offsetRotation.y ) / scope.rotationSnap ) * scope.rotationSnap );\n\t\t\t\t\t\tquaternionZ.setFromAxisAngle( unitZ, Math.round( ( rotation.z - offsetRotation.z ) / scope.rotationSnap ) * scope.rotationSnap );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tquaternionX.setFromAxisAngle( unitX, rotation.x - offsetRotation.x );\n\t\t\t\t\t\tquaternionY.setFromAxisAngle( unitY, rotation.y - offsetRotation.y );\n\t\t\t\t\t\tquaternionZ.setFromAxisAngle( unitZ, rotation.z - offsetRotation.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( scope.axis === \"X\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionX );\n\t\t\t\t\tif ( scope.axis === \"Y\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionY );\n\t\t\t\t\tif ( scope.axis === \"Z\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionZ );\n\n\t\t\t\t\tscope.object.quaternion.copy( quaternionXYZ );\n\n\t\t\t\t} else if ( scope.space === \"world\" ) {\n\n\t\t\t\t\trotation.set( Math.atan2( point.z, point.y ), Math.atan2( point.x, point.z ), Math.atan2( point.y, point.x ) );\n\t\t\t\t\toffsetRotation.set( Math.atan2( tempVector.z, tempVector.y ), Math.atan2( tempVector.x, tempVector.z ), Math.atan2( tempVector.y, tempVector.x ) );\n\n\t\t\t\t\ttempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\n\n\t\t\t\t\tif ( scope.rotationSnap !== null ) {\n\n\t\t\t\t\t\tquaternionX.setFromAxisAngle( unitX, Math.round( ( rotation.x - offsetRotation.x ) / scope.rotationSnap ) * scope.rotationSnap );\n\t\t\t\t\t\tquaternionY.setFromAxisAngle( unitY, Math.round( ( rotation.y - offsetRotation.y ) / scope.rotationSnap ) * scope.rotationSnap );\n\t\t\t\t\t\tquaternionZ.setFromAxisAngle( unitZ, Math.round( ( rotation.z - offsetRotation.z ) / scope.rotationSnap ) * scope.rotationSnap );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tquaternionX.setFromAxisAngle( unitX, rotation.x - offsetRotation.x );\n\t\t\t\t\t\tquaternionY.setFromAxisAngle( unitY, rotation.y - offsetRotation.y );\n\t\t\t\t\t\tquaternionZ.setFromAxisAngle( unitZ, rotation.z - offsetRotation.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tquaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n\t\t\t\t\tif ( scope.axis === \"X\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n\t\t\t\t\tif ( scope.axis === \"Y\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n\t\t\t\t\tif ( scope.axis === \"Z\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n\t\t\t\t\tscope.object.quaternion.copy( tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.update();\n\t\t\tscope.dispatchEvent( changeEvent );\n\t\t\tscope.dispatchEvent( objectChangeEvent );\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tevent.preventDefault(); // Prevent MouseEvent on mobile\n\n\t\t\tif ( event.button !== undefined && event.button !== 0 ) return;\n\n\t\t\tif ( _dragging && ( scope.axis !== null ) ) {\n\n\t\t\t\tmouseUpEvent.mode = _mode;\n\t\t\t\tscope.dispatchEvent( mouseUpEvent );\n\n\t\t\t}\n\n\t\t\t_dragging = false;\n\n\t\t\tif ( 'TouchEvent' in window && event instanceof TouchEvent ) {\n\n\t\t\t\t// Force \"rollover\"\n\n\t\t\t\tscope.axis = null;\n\t\t\t\tscope.update();\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t} else {\n\n\t\t\t\tonPointerHover( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction intersectObjects( pointer, objects ) {\n\n\t\t\tvar rect = domElement.getBoundingClientRect();\n\t\t\tvar x = ( pointer.clientX*2 - rect.left ) / rect.width;\n\t\t\tvar y = ( pointer.clientY - rect.top ) / rect.height;\n\n\t\t\tpointerVector.set( ( x * 2 ) - 1, - ( y * 2 ) + 1 );\n\t\t\tray.setFromCamera( pointerVector, camera );\n\n\t\t\tvar intersections = ray.intersectObjects( objects, true );\n\t\t\treturn intersections[ 0 ] ? intersections[ 0 ] : false;\n\n\t\t}\n\n\t};\n\n\tTHREE.TransformControls.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.TransformControls.prototype.constructor = THREE.TransformControls;\n\n}() );\n"],
  "mappings": "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",
  "names": ["type"]
}
